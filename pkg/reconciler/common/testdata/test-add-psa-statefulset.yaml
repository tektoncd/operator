apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: tekton-results-postgres
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: v0.4.0
  name: tekton-results-postgres
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tekton-results-postgres
      app.kubernetes.io/part-of: tekton-results
      app.kubernetes.io/version: v0.4.0
  serviceName: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tekton-results-postgres
        app.kubernetes.io/part-of: tekton-results
        app.kubernetes.io/version: v0.4.0
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: tekton-results-postgres
            - secretRef:
                name: tekton-results-postgres
          image: postgres@sha256:6647385dd9ae11aa2216bf55c54d126b0a85637b3cf4039ef24e3234113588e3
          name: postgres
          ports:
            - containerPort: 5432
              name: postgredb
          volumeMounts:
            - mountPath: /var/data
              name: postgredb
            - mountPath: /docker-entrypoint-initdb.d
              name: sql-initdb
      volumes:
        - configMap:
            name: tekton-results-sql-initdb-config
          name: sql-initdb
  volumeClaimTemplates:
    - metadata:
        labels:
          app.kubernetes.io/part-of: tekton-results
          app.kubernetes.io/version: v0.4.0
        name: postgredb
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
