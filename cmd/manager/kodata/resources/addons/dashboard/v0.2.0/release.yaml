apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: tekton-dashboard
  name: tekton-dashboard
  namespace: tekton-pipelines
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: extensions.dashboard.tekton.dev
spec:
  group: dashboard.tekton.dev
  names:
    categories:
    - all
    - tekton-pipelines
    kind: Extension
    plural: extensions
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-dashboard-minimal
  namespace: tekton-pipelines
rules:
- apiGroups:
  - extensions
  - apps
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  - services
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  - namespaces
  - events
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - create
  - update
  - watch
  - delete
- apiGroups:
  - extensions
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - clustertasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - taskruns/finalizers
  - pipelineruns/finalizers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - tasks/status
  - clustertasks/status
  - taskruns/status
  - pipelines/status
  - pipelineruns/status
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - dashboard.tekton.dev
  resources:
  - extensions
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-dashboard-minimal
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-dashboard-minimal
subjects:
- kind: ServiceAccount
  name: tekton-dashboard
  namespace: tekton-pipelines
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tekton-dashboard
  name: tekton-dashboard
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tekton-dashboard
  template:
    metadata:
      labels:
        app: tekton-dashboard
      name: tekton-dashboard
    spec:
      containers:
      - env:
        - name: PORT
          value: "9097"
        - name: WEB_RESOURCES_DIR
          value: /var/run/ko/web
        - name: PIPELINE_RUN_SERVICE_ACCOUNT
          value: ""
        - name: INSTALLED_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: gcr.io/tekton-releases/github.com/tektoncd/dashboard/cmd/dashboard@sha256:d6d1572aff2036707339fdcdf6a89e2850750a1ac643cd033ecdba4fbe4c3f20
        livenessProbe:
          httpGet:
            path: /health
            port: 9097
        name: tekton-dashboard
        ports:
        - containerPort: 9097
        readinessProbe:
          httpGet:
            path: /readiness
            port: 9097
        resources: null
      serviceAccountName: tekton-dashboard
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-dashboard
  name: tekton-dashboard
  namespace: tekton-pipelines
spec:
  ports:
  - name: http
    port: 9097
    protocol: TCP
    targetPort: 9097
  selector:
    app: tekton-dashboard

---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: pipeline0-task
  namespace: tekton-pipelines
spec:
  inputs:
    params:
    - default: /workspace/git-source
      description: The path to the resource files to apply
      name: pathToResourceFiles
      type: string
    - default: .
      description: The directory from which resources are to be applied
      name: apply-directory
      type: string
    - default: tekton-pipelines
      description: The namespace in which to create the resources being imported
      name: target-namespace
      type: string
    resources:
    - name: git-source
      type: git
  steps:
  - args:
    - apply
    - -f
    - $(inputs.params.pathToResourceFiles)/$(inputs.params.apply-directory)
    - -n
    - $(inputs.params.target-namespace)
    command:
    - kubectl
    image: lachlanevenson/k8s-kubectl:latest@sha256:7f50d26d77ba7bd15ef9c0ebd29db88cf81d095287b63bd1e4054cdfb0d52417
    name: kubectl-apply

---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: pipeline0
  namespace: tekton-pipelines
spec:
  params:
  - default: /workspace/git-source
    description: The path to the resource files to apply
    name: pathToResourceFiles
    type: string
  - default: .
    description: The directory from which resources are to be applied
    name: apply-directory
    type: string
  - default: tekton-pipelines
    description: The namespace in which to create the resources being imported
    name: target-namespace
    type: string
  resources:
  - name: git-source
    type: git
  tasks:
  - name: pipeline0-task
    params:
    - name: pathToResourceFiles
      value: $(params.pathToResourceFiles)
    - name: apply-directory
      value: $(params.apply-directory)
    - name: target-namespace
      value: $(params.target-namespace)
    resources:
      inputs:
      - name: git-source
        resource: git-source
    taskRef:
      name: pipeline0-task

---
