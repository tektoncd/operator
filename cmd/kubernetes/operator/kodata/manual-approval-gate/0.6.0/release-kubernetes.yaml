# Copyright 2022 The OpenShift Pipelines Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: manual-approval-gate-controller
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: manual-approval-gate-webhook
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates

---
# Copyright 2022 The OpenShift Pipelines Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: manual-approval-gate-controller-cluster-access
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
rules:
  # Controller needs cluster access to all of the CRDs that it is responsible for managing.
  - apiGroups: ["tekton.dev"]
    resources: ["runs", "taskruns", "customruns"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["tekton.dev"]
    resources: ["tasks"]
    verbs: ["get", "list"]
  - apiGroups: ["tekton.dev"]
    resources: ["runs/status", "taskruns/status", "customruns/status"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["openshift-pipelines.org"]
    resources: ["approvaltasks"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["tekton.dev"]
    resources: ["taskruns/finalizers", "pipelineruns/finalizers", "runs/finalizers", "customruns/finalizers"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["tekton.dev"]
    resources: ["runs/finalizers"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["openshift-pipelines.org"]
    resources: ["approvaltasks/status"]
    verbs: ["update", "patch", "create"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  # This is the access that the controller needs on a per-namespace basis.
  name: manual-approval-gate-controller-tenant-access
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: manual-approval-gate-webhook-cluster-access
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
rules:
  # The webhook needs to be able to list and update customresourcedefinitions,
  # mainly to update the webhook certificates.
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions", "customresourcedefinitions/status"]
    verbs: ["get", "list", "update", "patch", "watch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    # The webhook performs a reconciliation on these two resources and continuously
    # updates configuration.
    resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
    # knative starts informers on these things, which is why we need get, list and watch.
    verbs: ["list", "watch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations"]
    # This mutating webhook is responsible for applying defaults to tekton objects
    # as they are received.
    resourceNames: ["webhook.approvaltask.openshift.org"]
    # When there are changes to the configs or secrets, knative updates the mutatingwebhook config
    # with the updated certificates or the refreshed set of rules.
    verbs: ["get", "update"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["validatingwebhookconfigurations"]
    # validation.webhook.approvaltask.openshift.org performs schema validation when you, for example, create TaskLoops.
    resourceNames: ["validation.webhook.manual-approval.openshift-pipelines.org"]
    # When there are changes to the configs or secrets, knative updates the validatingwebhook config
    # with the updated certificates or the refreshed set of rules.
    verbs: ["get", "list", "update", "patch", "watch"]
  - apiGroups: ["openshift-pipelines.org"]
    resources: ["approvaltasks"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["openshift-pipelines.org"]
    resources: ["approvaltasks/status"]
    verbs: ["update", "patch", "create"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: manual-approval-gate-leader-election
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
rules:
  # We uses leases for leaderelection
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]

---
# Copyright 2022 The OpenShift Pipelines Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: manual-approval-gate-controller
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
    resourceNames: ["manual-approval-config-leader-election", "config-logging", "config-observability"]
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: manual-approval-gate-webhook
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["list", "watch"]
  # The webhook needs access to these configmaps for logging information.
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
    resourceNames: ["config-logging", "config-observability", "manual-approval-config-leader-election"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["list", "watch"]
  # The webhook daemon makes a reconciliation loop on manual-approval-gate-webhook-certs. Whenever
  # the secret changes it updates the webhook configurations with the certificates
  # stored in the secret.
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "update"]
    resourceNames: ["manual-approval-gate-webhook-certs"]

---
# Copyright 2022 The OpenShift Pipelines Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: manual-approval-gate-controller
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
subjects:
  - kind: ServiceAccount
    name: manual-approval-gate-controller
    namespace: tekton-pipelines
roleRef:
  kind: Role
  name: manual-approval-gate-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: manual-approval-gate-webhook
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
subjects:
  - kind: ServiceAccount
    name: manual-approval-gate-webhook
    namespace: tekton-pipelines
roleRef:
  kind: Role
  name: manual-approval-gate-webhook
  apiGroup: rbac.authorization.k8s.io

---
# Copyright 2022 The OpenShift Pipelines Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manual-approval-gate-controller-cluster-access
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
subjects:
  - kind: ServiceAccount
    name: manual-approval-gate-controller
    namespace: tekton-pipelines
  - kind: Group
    name: system:authenticated
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: manual-approval-gate-controller-cluster-access
  apiGroup: rbac.authorization.k8s.io
---
# If this ClusterRoleBinding is replaced with a RoleBinding
# then the ClusterRole would be namespaced. The access described by
# the tekton-taskgroup-controller-tenant-access ClusterRole would
# be scoped to individual tenant namespaces.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manual-approval-gate-controller-tenant-access
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
subjects:
  - kind: ServiceAccount
    name: manual-approval-gate-controller
    namespace: tekton-pipelines
roleRef:
  kind: ClusterRole
  name: manual-approval-gate-controller-tenant-access
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manual-approval-gate-controller-leaderelection
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
subjects:
  - kind: ServiceAccount
    name: manual-approval-gate-controller
    namespace: tekton-pipelines
roleRef:
  kind: ClusterRole
  name: manual-approval-gate-leader-election
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manual-approval-gate-webhook-cluster-access
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
subjects:
  - kind: ServiceAccount
    name: manual-approval-gate-webhook
    namespace: tekton-pipelines
roleRef:
  kind: ClusterRole
  name: manual-approval-gate-webhook-cluster-access
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manual-approval-gate-webhook-leaderelection
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
subjects:
  - kind: ServiceAccount
    name: manual-approval-gate-webhook
    namespace: tekton-pipelines
roleRef:
  kind: ClusterRole
  name: manual-approval-gate-leader-election
  apiGroup: rbac.authorization.k8s.io

---
# Copyright 2022 The OpenShift Pipelines Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: approvaltasks.openshift-pipelines.org
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
    pipeline.tekton.dev/release: "devel"
    version: "v0.6.0"
spec:
  group: openshift-pipelines.org
  preserveUnknownFields: false
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          # One can use x-kubernetes-preserve-unknown-fields: true
          # at the root of the schema (and inside any properties, additionalProperties)
          # to get the traditional CRD behaviour that nothing is pruned, despite
          # setting spec.preserveUnknownProperties: false.
          #
          # See https://kubernetes.io/blog/2019/06/20/crd-structural-schema/
          # See issue: https://github.com/knative/serving/issues/912
          x-kubernetes-preserve-unknown-fields: true
      # Opt into the status subresource so metadata.generation
      # starts to increment
      subresources:
        status: {}
  names:
    kind: ApprovalTask
    plural: approvaltasks
    categories:
      - tekton
      - tekton-pipelines
  scope: Namespaced

---
# Copyright 2024 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Secret
metadata:
  name: manual-approval-gate-webhook-certs
  namespace: tekton-pipelines
# The data is populated at install time.
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validation.webhook.manual-approval.openshift-pipelines.org
webhooks:
  - admissionReviewVersions: ["v1"]
    clientConfig:
      service:
        name: manual-approval-webhook
        namespace: tekton-pipelines
    failurePolicy: Fail
    sideEffects: None
    name: validation.webhook.manual-approval.openshift-pipelines.org
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: manual-approval-config-leader-election
  namespace: tekton-pipelines
  labels:
    operator.tekton.dev/release: devel
    app.kubernetes.io/instance: default
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
    # lease-duration is how long non-leaders will wait to try to acquire the
    # lock; 15 seconds is the value used by core kubernetes controllers.
    lease-duration: "60s"
    # renew-deadline is how long a leader will try to renew the lease before
    # giving up; 10 seconds is the value used by core kubernetes controllers.
    renew-deadline: "40s"
    # retry-period is how long the leader election client waits between tries of
    # actions; 2 seconds is the value used by core kubernetes controllers.
    retry-period: "10s"
    # buckets is the number of buckets used to partition key space of each
    # Reconciler. If this number is M and the replica number of the controller
    # is N, the N replicas will compete for the M buckets. The owner of a
    # bucket will take care of the reconciling for the keys partitioned into
    # that bucket.
    buckets: "1"

---
# Copyright 2022 The OpenShift Pipelines Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: manual-approval-gate-controller
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: controller
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/version: "v0.6.0"
    app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
    # tekton.dev/release value replaced with inputs.params.versionTag in pipeline/tekton/publish.yaml
    pipeline.tekton.dev/release: "devel"
    # labels below are related to istio and should not be used for resource lookup
    version: "v0.6.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: controller
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/name: controller
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: default
        app.kubernetes.io/version: "v0.6.0"
        app.kubernetes.io/part-of: openshift-pipelines-manual-approval-gates
        # tekton.dev/release value replaced with inputs.params.versionTag in pipeline/tekton/publish.yaml
        pipeline.tekton.dev/release: "devel"
        # labels below are related to istio and should not be used for resource lookup
        app: tekton-taskgroup-controller
        version: "v0.6.0"
    spec:
      serviceAccountName: manual-approval-gate-controller
      containers:
        - name: tekton-taskgroup-controller
          image: ghcr.io/openshift-pipelines/manual-approval-gate/controller-b21cda49f4c608e77b59fc6a3bf67c9e:v0.6.0@sha256:5d0c0236251f645bd7ff287e0034754d29a6789b63af9a75ea2db00103ca0b9a
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LEADERELECTION_NAME
              value: manual-approval-config-leader-election
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: openshift-pipelines.org/manual-approval-gate
            - name: KUBERNETES_MIN_VERSION
              value: "v1.28.0"
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            runAsUser: 65532
            capabilities:
              drop:
                - ALL

---
# Copyright 2024 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: manual-approval-gate-webhook
  namespace: tekton-pipelines
  labels:
    version: "v0.6.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: manual-approval-gate-webhook
  template:
    metadata:
      labels:
        name: manual-approval-gate-webhook
        app: manual-approval-gate-webhook
    spec:
      serviceAccountName: manual-approval-gate-webhook
      containers:
        - name: manual-approval
          image: "ghcr.io/openshift-pipelines/manual-approval-gate/webhook-3d5568be3d188037c7bf9bfde2cf1321:v0.6.0@sha256:e983187cbfbc690b3d1b20a11169aed6b9870735871403d245fa6e0583818b72"
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: WEBHOOK_SERVICE_NAME
              value: manual-approval-webhook
            - name: WEBHOOK_SECRET_NAME
              value: manual-approval-gate-webhook-certs
            - name: CONFIG_LEADERELECTION_NAME
              value: manual-approval-config-leader-election
            - name: KUBERNETES_MIN_VERSION
              value: "v1.28.0"
          ports:
            - name: https-webhook
              containerPort: 8443
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            runAsUser: 65532
            capabilities:
              drop:
                - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: manual-approval-webhook
  namespace: tekton-pipelines
  labels:
    version: "v0.6.0"
spec:
  ports:
    - name: https-webhook
      port: 443
      targetPort: 8443
  selector:
    name: manual-approval-gate-webhook

---
# Copyright 2024 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: manual-approval-gate-info
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: manual-approval-gate
data:
  version: "v0.6.0"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: manual-approval-gate-info
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: manual-approval-gate
rules:
  # All system:authenticated users need to have access
  # to the manual-approval-gate-info ConfigMap even if they don't
  # have access to other resources present in the
  # installed namespace
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["manual-approval-gate-info"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: manual-approval-gate-info
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: manual-approval-gate
subjects:
  # Giving all system:authenticated users the access to the
  # ConfigMap which contains version information
  - kind: Group
    name: system:authenticated
    apiGroup: rbac.authorization.k8s.io
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: manual-approval-gate-info

---
