---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-operators-proxy-webhook
  namespace: tekton-pipelines

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tekton-operators-proxy-admin
rules:
  - apiGroups: [""]
    resources: ["pods", "configmaps", "services", "events", "namespaces"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/finalizers"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  # We uses leases for leaderelection
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["security.openshift.io"]
    resources: ["securitycontextconstraints"]
    verbs: ["get", "list", "watch"]

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tekton-operators-proxy-admin
  namespace: tekton-pipelines
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-operators-proxy-webhook-admin
subjects:
  - kind: ServiceAccount
    name: tekton-operators-proxy-webhook
    namespace: tekton-pipelines
roleRef:
  kind: ClusterRole
  name: tekton-operators-proxy-admin
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-operators-proxy-webhook-admin
  namespace: tekton-pipelines
subjects:
  - kind: ServiceAccount
    name: tekton-operators-proxy-webhook
    namespace: tekton-pipelines
roleRef:
  kind: Role
  name: tekton-operators-proxy-admin
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: Secret
metadata:
  name: proxy-webhook-certs
  namespace: tekton-pipelines

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: tekton-operator-proxy-webhook
  namespace: tekton-pipelines
  labels:
    version: "devel"
    operator.tekton.dev/release: "devel"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: tekton-operator
  template:
    metadata:
      labels:
        name: tekton-operator
        app: tekton-operator
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: tekton-operators-proxy-webhook
      containers:
        - name: proxy
          image: "ko://github.com/tektoncd/operator/cmd/openshift/proxy-webhook"
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: WEBHOOK_SERVICE_NAME
              value: tekton-operator-proxy-webhook
            - name: WEBHOOK_SECRET_NAME
              value: proxy-webhook-certs
            - name: METRICS_DOMAIN
              value: tekton.dev/operator
            - name: CONFIG_LEADERELECTION_NAME
              value: tekton-operator-proxy-webhook-config-leader-election
          ports:
            - name: https-webhook
              containerPort: 8443
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 500m
              memory: 500Mi

---

apiVersion: v1
kind: Service
metadata:
  name: tekton-operator-proxy-webhook
  namespace: tekton-pipelines
  labels:
    version: "devel"
    operator.tekton.dev/release: "devel"
spec:
  ports:
    - name: https-webhook
      port: 443
      targetPort: 8443
  selector:
    name: tekton-operator

---

apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: proxy.operator.tekton.dev
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: tekton-operator-proxy-webhook
        namespace: tekton-pipelines
    failurePolicy: Fail
    sideEffects: None
    name: proxy.operator.tekton.dev

---

apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: annotation.operator.tekton.dev
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: tekton-operator-proxy-webhook
        namespace: tekton-pipelines
    failurePolicy: Fail
    sideEffects: None
    name: annotation.operator.tekton.dev

---

apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: namespace.operator.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: tekton-operator-proxy-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  sideEffects: None
  name: namespace.operator.tekton.dev

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: tekton-operator-proxy-webhook-config-leader-election
  labels:
    operator.tekton.dev/release: devel
    app.kubernetes.io/instance: default
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
    # lease-duration is how long non-leaders will wait to try to acquire the
    # lock; 15 seconds is the value used by core kubernetes controllers.
    lease-duration: "60s"
    # renew-deadline is how long a leader will try to renew the lease before
    # giving up; 10 seconds is the value used by core kubernetes controllers.
    renew-deadline: "40s"
    # retry-period is how long the leader election client waits between tries of
    # actions; 2 seconds is the value used by core kubernetes controllers.
    retry-period: "10s"
    # buckets is the number of buckets used to partition key space of each
    # Reconciler. If this number is M and the replica number of the controller
    # is N, the N replicas will compete for the M buckets. The owner of a
    # bucket will take care of the reconciling for the keys partitioned into
    # that bucket.
    buckets: "1"

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: tekton-operator-proxy-webhook
  labels:
    app.kubernetes.io/instance: default
    pipeline.tekton.dev/release: "devel"
    version: "devel"
spec:
  minReplicas: 1
  maxReplicas: 5
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tekton-operator-proxy-webhook
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 100
