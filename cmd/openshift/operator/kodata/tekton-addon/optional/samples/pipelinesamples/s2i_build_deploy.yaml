---
apiVersion: console.openshift.io/v1
kind: ConsoleYAMLSample
metadata:
  name: s2i-build-and-deploy-pipeline
spec:
  targetResource:
    apiVersion: tekton.dev/v1
    kind: Pipeline
  title: s2i-build-and-deploy-pipeline-using-workspace
  description: An example of s2i build and deploy pipeline using workspace
  snippet: false
  yaml: |
    apiVersion: tekton.dev/v1
    kind: Pipeline
    metadata:
      name: s2i-build-and-deploy
    spec:
      params:
        - name: IMAGE_NAME
          type: string
        - name: GIT_REPO
          type: string
        - name: GIT_REVISION
          type: string
      workspaces:
        - name: workspace
      tasks:
        - name: fetch-repository
          taskRef:
            resolver: cluster
            params:
            - name: kind
              value: task
            - name: name
              value: git-clone
            - name: namespace
              value: openshift-pipelines
          workspaces:
            - name: output
              workspace: workspace
          params:
            - name: URL
              value: $(params.GIT_REPO)
            - name: REVISION
              value: $(params.GIT_REVISION)
            - name: SUBDIRECTORY
              value: ""
            - name: DELETE_EXISTING
              value: "true"

        - name: build
          taskRef:
            resolver: cluster
            params:
            - name: kind
              value: task
            - name: name
              value: s2i-java
            - name: namespace
              value: openshift-pipelines
          runAfter:
            - fetch-repository
          workspaces:
            - name: source
              workspace: workspace
          params:
            - name: IMAGE
              value: $(params.IMAGE_NAME)
            - name: TLS_VERIFY
              value: "false"

        - name: deploy
          taskRef:
            resolver: cluster
            params:
            - name: kind
              value: task
            - name: name
              value: openshift-client
            - name: namespace
              value: openshift-pipelines
          runAfter:
            - build
          params:
          - name: SCRIPT
            value: |
              oc new-app --docker-image $(params.IMAGE_NAME)
